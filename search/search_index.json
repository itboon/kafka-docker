{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome","text":"<ul> <li>GitHub</li> <li>Docker Hub</li> </ul>"},{"location":"#apache-kafka","title":"\u5173\u4e8e Apache Kafka","text":"<p>Apache Kafka \u662f\u4e00\u4e2a\u5f00\u6e90\u5206\u5e03\u5f0f\u4e8b\u4ef6\u6d41\u5e73\u53f0\uff0c\u5df2\u88ab\u6570\u5343\u5bb6\u516c\u53f8\u7528\u4e8e\u9ad8\u6027\u80fd\u6570\u636e\u7ba1\u9053\u3001\u6d41\u5206\u6790\u3001\u6570\u636e\u96c6\u6210\u548c\u5173\u952e\u4efb\u52a1\u5e94\u7528\u7a0b\u5e8f\u3002</p>"},{"location":"#_1","title":"\u4e3a\u4f55\u9009\u62e9\u8fd9\u4e2a\u955c\u50cf","text":"<ul> <li>\u5168\u9762\u517c\u5bb9 <code>KRaft</code>, \u4e0d\u4f9d\u8d56 ZooKeeper</li> <li>\u7075\u6d3b\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u914d\u7f6e\u8986\u76d6</li> <li>\u4e0a\u624b\u7b80\u5355</li> <li>\u63d0\u4f9b <code>helm chart</code>\uff0c\u4f60\u53ef\u4ee5\u5728 Kubernetes \u5feb\u901f\u90e8\u7f72\u9ad8\u53ef\u7528 Kafka \u96c6\u7fa4</li> </ul>"},{"location":"#_2","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>Docker \u542f\u52a8 Kafka</li> <li>Helm \u90e8\u7f72 kafka</li> </ul>"},{"location":"compose/","title":"Docker Compose \u542f\u52a8 Kafka","text":"<pre><code>version: \"3\"\n\nvolumes:\nkafka-data: {}\n\nservices:\nkafka:\nimage: kafkace/kafka:v3.5\n# restart: always\nports:\n- \"29092:29092\"\nvolumes:\n- kafka-data:/opt/kafka/data\nenvironment:\n- KAFKA_HEAP_OPTS=-Xmx512m -Xms512m\n## \u5c06\u4e0b\u9762 ${KAFKA_BROKER_EXTERNAL_HOST} \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u5916\u90e8\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740\n## - KAFKA_BROKER_EXTERNAL_HOST=kafka.example.com\n- KAFKA_BROKER_EXTERNAL_HOST=${KAFKA_BROKER_EXTERNAL_HOST}\n- KAFKA_BROKER_EXTERNAL_PORT=29092\n\n## kafka web \u7ba1\u7406 (\u53ef\u9009)\nkafka-ui:\nimage: provectuslabs/kafka-ui:v0.7.1\n# restart: always\nports:\n- \"18080:8080\"\nenvironment:\n- KAFKA_CLUSTERS_0_NAME=demo-kafka-server\n- KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092\n\n### \u5185\u90e8\u7f51\u7edc\n## broker \u9ed8\u8ba4\u5185\u90e8\u7aef\u53e3 9092\n## bootstrap-server: kafka:9092\n\n### \u5916\u90e8\u7f51\u7edc\n## broker \u9ed8\u8ba4\u5916\u90e8\u7aef\u53e3 29092\n## bootstrap-server: ${KAFKA_BROKER_EXTERNAL_HOST}:29092\n</code></pre> <p>\u4f20\u5165 <code>KAFKA_BROKER_EXTERNAL_HOST</code> \u53d8\u91cf\u540e\uff0c\u542f\u52a8\u811a\u672c\u4f1a\u4fee\u6539\u76f8\u5173\u7f51\u7edc\u914d\u7f6e\uff0c\u4f8b\u5982 <code>listeners</code>\u3001<code>advertised.listeners</code>\u3001<code>listener.security.protocol.map</code>\uff0c\u8be6\u60c5\u8bf7\u53c2\u8003\u73af\u5883\u53d8\u91cf\u548c\u914d\u7f6e</p>"},{"location":"compose/#_1","title":"\u9ad8\u7ea7\u7f51\u7edc\u914d\u7f6e","text":"<p>\u4e0b\u9762\u8fd9\u4e2a\u6848\u4f8b\u5217\u51fa\u4e86\u8be6\u7ec6\u7684 Kafka \u7f51\u7edc\u914d\u7f6e\uff0c\u90e8\u7f72\u540e\u7684\u6548\u679c\u4e0e\u4e0a\u6587\u7684\u6848\u4f8b\u662f\u7b49\u6548\u7684\u3002</p> <pre><code>version: \"3\"\n\nvolumes:\nkafka-data: {}\n\nservices:\nkafka:\nimage: kafkace/kafka:v3.5\n# restart: always\nports:\n- \"29092:29092\"\nvolumes:\n- kafka-data:/opt/kafka/data\nenvironment:\n- KAFKA_HEAP_OPTS=-Xmx1024m -Xms1024m\n- KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL\n- KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT\n- KAFKA_CFG_LISTENERS=CONTROLLER://:9091,INTERNAL://:9092,EXTERNAL://:29092\n## \u5c06\u4e0b\u9762 ${KAFKA_BROKER_EXTERNAL_HOST} \u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u5916\u90e8\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740\n- KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://:9092,EXTERNAL://${KAFKA_BROKER_EXTERNAL_HOST}:29092\n- KAFKA_CFG_NODE_ID=1\n- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9091\n\n## kafka web \u7ba1\u7406 (\u53ef\u9009)\nkafka-ui:\nimage: provectuslabs/kafka-ui:v0.7.1\n# restart: always\nports:\n- \"18080:8080\"\nenvironment:\n- KAFKA_CLUSTERS_0_NAME=kafka-demo\n- KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092\n#- KAFKA_CLUSTERS_0_READONLY=true\n\n### \u5185\u90e8\u7f51\u7edc\n## broker \u9ed8\u8ba4\u5185\u90e8\u7aef\u53e3 9092\n## bootstrap-server: kafka:9092\n\n### \u5916\u90e8\u7f51\u7edc\n## broker \u9ed8\u8ba4\u5916\u90e8\u7aef\u53e3 29092\n## bootstrap-server: ${KAFKA_BROKER_EXTERNAL_HOST}:29092\n</code></pre>"},{"location":"docker/","title":"Docker \u542f\u52a8 Kafka","text":"<p>\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u542f\u52a8 Kafka:</p> <pre><code>docker run -d --name demo-kafka-server kafkace/kafka:v3.5\n</code></pre>"},{"location":"docker/#_1","title":"\u7aef\u53e3\u66b4\u9732","text":"<p>\u8de8\u4e3b\u673a\u8bbf\u95ee\u9700\u8981\u5f00\u542f\u5916\u90e8\u7f51\u7edc\uff1a</p> <pre><code>docker run -d --name demo-kafka-server \\\n-p 29092:29092 \\\n--env KAFKA_BROKER_EXTERNAL_HOST=\"172.16.1.149\" \\\n--env KAFKA_BROKER_EXTERNAL_PORT=\"29092\" \\\nkafkace/kafka:v3.5\n</code></pre> <ul> <li>broker \u9ed8\u8ba4\u5185\u90e8\u7aef\u53e3 <code>9092</code></li> <li><code>KAFKA_BROKER_EXTERNAL_HOST</code>, \u5bf9\u5916\u66b4\u9732\u7684\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740</li> <li><code>KAFKA_BROKER_EXTERNAL_PORT</code>, \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u4e0d\u80fd\u8ddf\u5185\u90e8\u7aef\u53e3\u91cd\u590d</li> </ul> <p>\u5728\u6ca1\u6709\u63d0\u4f9b <code>KAFKA_BROKER_EXTERNAL_HOST</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u901a\u8fc7 docker \u5bf9\u5916\u66b4\u9732\u7aef\u53e3\u662f\u65e0\u6548\u7684\u3002</p>"},{"location":"docker/#_2","title":"\u6301\u4e45\u5316","text":"<p>\u6570\u636e\u5b58\u50a8\u8def\u5f84 <code>/opt/kafka/data</code>\uff0c\u6302\u8f7d\u6570\u636e\u5377:</p> <pre><code>docker volume create demo-kafka-data\n\ndocker run -d --name demo-kafka-server \\\n-p 29092:29092 \\\n-v demo-kafka-data:/opt/kafka/data \\\n--env KAFKA_BROKER_EXTERNAL_HOST=\"172.16.1.149\" \\\n--env KAFKA_BROKER_EXTERNAL_PORT=\"29092\" \\\nkafkace/kafka:v3.5\n</code></pre>"},{"location":"docker/#_3","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>Docker Compose \u542f\u52a8 Kafka</li> <li>\u73af\u5883\u53d8\u91cf\u548c\u914d\u7f6e</li> </ul>"},{"location":"env/","title":"\u73af\u5883\u53d8\u91cf","text":""},{"location":"env/#environment-variables","title":"Environment Variables","text":"\u53d8\u91cf \u9ed8\u8ba4\u503c \u63cf\u8ff0 <code>KAFKA_CLUSTER_ID</code> \u968f\u673a\u751f\u6210 Cluster ID <code>KAFKA_BROKER_LISTENER_PORT</code> <code>9092</code> broker \u7aef\u53e3\u53f7\uff0c\u5982\u679c\u914d\u7f6e\u4e86 <code>KAFKA_CFG_LISTENERS</code> \u5219\u6b64\u9879\u5931\u6548 <code>KAFKA_CONTROLLER_LISTENER_PORT</code> <code>19091</code> controller \u7aef\u53e3\u53f7\uff0c\u5982\u679c\u914d\u7f6e\u4e86 <code>KAFKA_CFG_LISTENERS</code> \u5219\u6b64\u9879\u5931\u6548 <code>KAFKA_BROKER_EXTERNAL_HOST</code> null \u5bf9\u5916\u66b4\u9732\u7684\u4e3b\u673a\u540d\uff0c\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740\uff0c\u5982\u679c\u914d\u7f6e\u4e86 <code>KAFKA_CFG_ADVERTISED_LISTENERS</code> \u5219\u6b64\u9879\u5931\u6548 <code>KAFKA_BROKER_EXTERNAL_PORT</code> <code>29092</code> \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\u53f7\uff0c\u4e0d\u80fd\u8ddf\u5185\u90e8\u7aef\u53e3\u91cd\u590d\uff0c\u5982\u679c\u914d\u7f6e\u4e86 <code>KAFKA_CFG_ADVERTISED_LISTENERS</code> \u5219\u6b64\u9879\u5931\u6548 <code>KAFKA_HEAP_OPTS</code> <code>null</code> Kafka Java Heap size. \u4f8b\u5982: <code>-Xmx512m -Xms512m</code>"},{"location":"env/#kafka-configurations","title":"Kafka Configurations","text":"<p>\u6240\u6709\u4ee5 <code>KAFKA_CFG_</code> \u5f00\u5934\u7684\u73af\u5883\u53d8\u91cf\u90fd\u5c06\u6620\u5c04\u5230\u5176\u76f8\u5e94\u7684 Apache Kafka \u914d\u7f6e\u9879\u3002</p> <p>\u4f8b\u5982 <code>KAFKA_CFG_LISTENERS</code> \u5bf9\u5e94\u914d\u7f6e\u53c2\u6570 <code>listeners</code>\uff0c<code>KAFKA_CFG_ADVERTISED_LISTENERS</code> \u5bf9\u5e94\u914d\u7f6e\u53c2\u6570 <code>advertised.listeners</code></p> <p>Variable examples:</p> \u53d8\u91cf \u914d\u7f6e\u9879 <code>KAFKA_CFG_PROCESS_ROLES</code> <code>process.roles</code> <code>KAFKA_CFG_LISTENERS</code> <code>listeners</code> <code>KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP</code> <code>listener.security.protocol.map</code> <code>KAFKA_CFG_ADVERTISED_LISTENERS</code> <code>advertised.listeners</code> <code>KAFKA_CFG_CONTROLLER_QUORUM_VOTERS</code> <code>controller.quorum.voters</code> <code>KAFKA_CFG_LOG_RETENTION_HOURS</code> <code>log.retention.hours</code> <p><code>log.dir</code> \u548c <code>log.dirs</code> \u5df2\u7ecf\u88ab\u9501\u5b9a\uff0c\u65e0\u6cd5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8986\u76d6\u3002</p> <p>\u5177\u4f53\u914d\u7f6e\u6848\u4f8b\u8bf7\u53c2\u8003 Docker Compose \u542f\u52a8 Kafka</p>"},{"location":"external/","title":"External Network","text":""},{"location":"external/#using-docker-compose","title":"Using Docker Compose","text":"<p>examples/docker-compose-bridge.yml</p> <pre><code>version: \"3\"\n\nvolumes:\nkafka-data: {}\n\n### KAFKA_HOST_IP_ADDR -- host ip address\n##  Write variables to .env file\uff0cfor exmaple: KAFKA_HOST_IP_ADDR=\"172.16.2.32\"\n###\n\n### Service port and address\n##  Controller: 9091\n##  Broker Internal: 9092\n##  Broker External: 29092\n##  bootstrap-server: ${KAFKA_HOST_IP_ADDR}:29092\n##  Access web UI http://${KAFKA_HOST_IP_ADDR}:18080\n###\n\nservices:\nkafka:\nimage: sir5kong/kafka:v3.5\n# restart: always\nports:\n- \"29092:29092\"\nvolumes:\n- kafka-data:/opt/kafka/data\nenvironment:\n- KAFKA_HEAP_OPTS=-Xmx1024m -Xms1024m\n- KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT\n- KAFKA_CFG_LISTENERS=CONTROLLER://:9091,PLAINTEXT://:9092,EXTERNAL://:29092\n- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://${KAFKA_HOST_IP_ADDR}:29092\n- KAFKA_CFG_NODE_ID=1\n- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9091\n\n## Web UI for managing Kafka clusters (optional)\nkafka-ui:\nimage: provectuslabs/kafka-ui:v0.7.1\n# restart: always\nports:\n- \"18080:8080\"\nenvironment:\n- KAFKA_CLUSTERS_0_NAME=sir5kong-demo\n- KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092\n#- KAFKA_CLUSTERS_0_READONLY=true\n</code></pre>"},{"location":"external/#using-helm","title":"Using Helm","text":"<pre><code>## LoadBalancer example\nbroker:\nreplicaCount: 3\nexternal:\nenabled: true\nservice:\ntype: \"LoadBalancer\"\nannotations: {}\ndomainSuffix: \"kafka.example.com\"\n</code></pre> <p>More About Helm</p>"},{"location":"helm-en/","title":"Kafka helm chart","text":""},{"location":"helm-en/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes 1.18+</li> <li>Helm 3.3+</li> </ul>"},{"location":"helm-en/#get-repository-info","title":"Get Repository Info","text":"<pre><code>helm repo add kafka-repo https://helm-charts.itboon.top/kafka\nhelm repo update kafka-repo\n</code></pre>"},{"location":"helm-en/#deploy-kafka","title":"Deploy Kafka","text":""},{"location":"helm-en/#deploy-a-single-node-cluster","title":"Deploy a single-node cluster","text":"<ul> <li>Turn off persistent storage here, only demonstrate the deployment operation</li> </ul> <pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.combinedMode.enabled=\"true\" \\\n--set broker.persistence.enabled=\"false\" \\\nkafka-repo/kafka\n</code></pre>"},{"location":"helm-en/#one-broker-and-one-controller-cluster","title":"One broker and one controller cluster","text":"<pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.persistence.size=\"20Gi\" \\\nkafka-repo/kafka\n</code></pre> <p>Persistence storage is used by default.</p>"},{"location":"helm-en/#deploy-a-highly-available-cluster","title":"Deploy a highly available cluster","text":"<pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set controller.replicaCount=\"3\" \\\n--set broker.replicaCount=\"3\" \\\n--set broker.heapOpts=\"-Xms4096m -Xmx4096m\" \\\n--set broker.resources.requests.memory=\"8Gi\" \\\n--set broker.resources.limits.memory=\"16Gi\" \\\nkafka-repo/kafka\n</code></pre> <p>More values please refer to examples/values-production.yml</p>"},{"location":"helm-en/#using-loadbalancer","title":"Using LoadBalancer","text":"<p>Enable Kubernetes external cluster access to Kafka brokers.</p> <pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.external.enabled=\"true\" \\\n--set broker.external.service.type=\"LoadBalancer\" \\\n--set broker.external.domainSuffix=\"kafka.example.com\" \\\nkafka-repo/kafka\n</code></pre> <p>Add domain name resolution to complete this deployment</p>"},{"location":"helm-en/#combined-mode","title":"combined mode","text":"<ul> <li>If process.roles is set to broker, the server acts as a broker.</li> <li>If process.roles is set to controller, the server acts as a controller.</li> <li>If process.roles is set to broker,controller, the server acts as both a broker and a controller.</li> </ul> <p>Kafka servers that act as both brokers and controllers are referred to as \"combined\" servers. Combined servers are simpler to operate for small use cases like a development environment. The key disadvantage is that the controller will be less isolated from the rest of the system. For example, it is not possible to roll or scale the controllers separately from the brokers in combined mode. Combined mode is not recommended in critical deployment environments.</p>"},{"location":"helm-en/#chart-values","title":"Chart Values","text":"Key Type Default Description broker.combinedMode.enabled bool <code>false</code> Whether to enable the combined mode <pre><code>broker:\ncombinedMode:\nenabled: true\nreplicaCount: 1\nheapOpts: \"-Xms1024m -Xmx1024m\"\npersistence:\nenabled: true\nsize: 20Gi\n</code></pre>"},{"location":"helm-en/#cluster-id","title":"Cluster ID","text":"<p>In earlier versions, Kafka will automatically initialize the data directory, the current version needs to provide a <code>Cluster ID</code> and manually initialize the data directory:</p> <pre><code>KAFKA_CLUSTER_ID=\"$(bin/kafka-storage.sh random-uuid)\"\nbin/kafka-storage.sh format -t $KAFKA_CLUSTER_ID -c config/kraft/server.properties\n</code></pre> <p>All nodes in a cluster need to use the same <code>Cluster ID</code>. In order to solve this problem, this project will automatically generate a <code>Cluster ID</code> and save it to <code>Secret</code> when it is deployed for the first time.</p>"},{"location":"helm-en/#external-access","title":"External Access","text":"<p>In order to connect to the Kafka server outside the cluster, each Broker must be exposed and <code>advertised.listeners</code> must be correctly configured.</p> <p>There are two ways to expose, <code>NodePort</code> and <code>LoadBalancer</code>, each broker node needs a <code>NodePort</code> or <code>LoadBalancer</code>.</p>"},{"location":"helm-en/#chart-values_1","title":"Chart Values","text":"Key Type Default Description broker.external.enabled bool <code>false</code> Whether to enable external access broker.external.service.type string <code>NodePort</code> <code>NodePort</code> or <code>LoadBalancer</code> broker.external.service.annotations object <code>{}</code> External serivce annotations broker.external.nodePorts list <code>[]</code> Provide at least one port number, if the count of ports is less than the count of broker nodes, it will be automatically incremented broker.external.domainSuffix string <code>kafka.example.com</code> If you use <code>LoadBalancer</code> for external access, you must use a domain name. The external domain name corresponding to the broker is <code>POD_NAME</code> + <code>domain name suffix</code>, such as <code>kafka-broker-0.kafka.example.com</code>. After the deployment, you need to complete the domain name resolution operation <pre><code>## NodePort example\nbroker:\nreplicaCount: 3\nexternal:\nenabled: true\nservice:\ntype: \"NodePort\"\nannotations: {}\nnodePorts:\n- 31050\n- 31051\n- 31052\n</code></pre> <pre><code>## LoadBalancer example\nbroker:\nreplicaCount: 3\nexternal:\nenabled: true\nservice:\ntype: \"LoadBalancer\"\nannotations: {}\ndomainSuffix: \"kafka.example.com\"\n</code></pre>"},{"location":"helm/","title":"Helm \u90e8\u7f72 Kafka","text":""},{"location":"helm/#prerequisites","title":"Prerequisites","text":"<ul> <li>Kubernetes 1.18+</li> <li>Helm 3.3+</li> </ul>"},{"location":"helm/#helm","title":"\u6dfb\u52a0 helm \u4ed3\u5e93","text":"<pre><code>helm repo add kafka-repo https://helm-charts.itboon.top/kafka\nhelm repo update kafka-repo\n</code></pre>"},{"location":"helm/#helm_1","title":"helm \u90e8\u7f72","text":""},{"location":"helm/#_1","title":"\u90e8\u7f72\u5355\u8282\u70b9\u96c6\u7fa4","text":"<ul> <li>\u4e0b\u9762\u8fd9\u4e2a\u6848\u4f8b\u5173\u95ed\u4e86\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u4ec5\u6f14\u793a\u90e8\u7f72\u6548\u679c</li> </ul> <pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.combinedMode.enabled=\"true\" \\\n--set broker.persistence.enabled=\"false\" \\\nkafka-repo/kafka\n</code></pre>"},{"location":"helm/#controller-broker","title":"Controller \u4e0e Broker \u5206\u79bb\u90e8\u7f72","text":"<pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.persistence.size=\"20Gi\" \\\nkafka-repo/kafka\n</code></pre> <p>\u9ed8\u8ba4\u5df2\u5f00\u542f\u6301\u4e45\u5316\u5b58\u50a8\u3002</p>"},{"location":"helm/#_2","title":"\u90e8\u7f72\u9ad8\u53ef\u7528\u96c6\u7fa4","text":"<pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set controller.replicaCount=\"3\" \\\n--set broker.replicaCount=\"3\" \\\n--set broker.heapOpts=\"-Xms4096m -Xmx4096m\" \\\n--set broker.resources.requests.memory=\"8Gi\" \\\n--set broker.resources.limits.memory=\"16Gi\" \\\nkafka-repo/kafka\n</code></pre> <p>\u66f4\u591a values \u8bf7\u53c2\u8003 examples/values-production.yml</p>"},{"location":"helm/#loadbalancer","title":"LoadBalancer \u5916\u90e8\u66b4\u9732","text":"<p>\u5f00\u542f Kubernetes \u96c6\u7fa4\u5916\u8bbf\u95ee\uff1a</p> <pre><code>helm upgrade --install kafka \\\n--namespace kafka-demo \\\n--create-namespace \\\n--set broker.external.enabled=\"true\" \\\n--set broker.external.service.type=\"LoadBalancer\" \\\n--set broker.external.domainSuffix=\"kafka.example.com\" \\\nkafka-repo/kafka\n</code></pre> <p>\u4e0a\u9762\u90e8\u7f72\u6210\u529f\u540e\u8bf7\u5b8c\u6210\u57df\u540d\u89e3\u6790\u914d\u7f6e\u3002</p>"},{"location":"helm/#chart-values","title":"Chart Values","text":"Key Type Default Description broker.combinedMode.enabled bool <code>false</code> Whether to enable the combined mode <pre><code>broker:\ncombinedMode:\nenabled: true\nreplicaCount: 1\nheapOpts: \"-Xms1024m -Xmx1024m\"\npersistence:\nenabled: true\nsize: 20Gi\n</code></pre>"},{"location":"helm/#_3","title":"\u96c6\u7fa4\u5916\u8bbf\u95ee","text":"<p>In order to connect to the Kafka server outside the cluster, each Broker must be exposed and <code>advertised.listeners</code> must be correctly configured.</p> <p>There are two ways to expose, <code>NodePort</code> and <code>LoadBalancer</code>, each broker node needs a <code>NodePort</code> or <code>LoadBalancer</code>.</p>"},{"location":"helm/#chart-values_1","title":"Chart Values","text":"Key Type \u9ed8\u8ba4\u503c \u63cf\u8ff0 broker.external.enabled bool <code>false</code> \u662f\u5426\u5f00\u542f\u96c6\u7fa4\u5916\u8bbf\u95ee broker.external.service.type string <code>NodePort</code> <code>NodePort</code> or <code>LoadBalancer</code> broker.external.service.annotations object <code>{}</code> External serivce annotations broker.external.nodePorts list <code>[]</code> NodePort \u6a21\u5f0f\uff0c\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e2a\u7aef\u53e3\u53f7\uff0c\u5982\u679c\u7aef\u53e3\u6570\u91cf\u5c11\u4e8e broker \u6570\u91cf\uff0c\u5219\u81ea\u589e broker.external.domainSuffix string <code>kafka.example.com</code> If you use <code>LoadBalancer</code> for external access, you must use a domain name. The external domain name corresponding to the broker is <code>POD_NAME</code> + <code>domain name suffix</code>, such as <code>kafka-broker-0.kafka.example.com</code>. After the deployment, you need to complete the domain name resolution operation <pre><code>## NodePort example\nbroker:\nreplicaCount: 3\nexternal:\nenabled: true\nservice:\ntype: \"NodePort\"\nannotations: {}\nnodePorts:\n- 31050\n- 31051\n- 31052\n</code></pre> <pre><code>## LoadBalancer example\nbroker:\nreplicaCount: 3\nexternal:\nenabled: true\nservice:\ntype: \"LoadBalancer\"\nannotations: {}\ndomainSuffix: \"kafka.example.com\"\n</code></pre>"},{"location":"kraft/","title":"KRaft","text":"<p>This project uses KRaft mode by default</p> <p>In KRaft mode each Kafka server can be configured as a controller, a broker, or both using the process.roles property. This property can have the following values:</p> <ul> <li>If process.roles is set to broker, the server acts as a broker.</li> <li>If process.roles is set to controller, the server acts as a controller.</li> <li>If process.roles is set to broker,controller, the server acts as both a broker and a controller.</li> <li>If process.roles is not set at all, it is assumed to be in ZooKeeper mode.</li> </ul> <p>Kafka servers that act as both brokers and controllers are referred to as \"combined\" servers. Combined servers are simpler to operate for small use cases like a development environment. The key disadvantage is that the controller will be less isolated from the rest of the system. For example, it is not possible to roll or scale the controllers separately from the brokers in combined mode. Combined mode is not recommended in critical deployment environments.</p>"}]}